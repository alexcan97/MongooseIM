type DomainAdminQuery @protected{
  "Get all enabled domains by hostType. Only for global admin"
  domainsByHostType(hostType: String!): [String!]
    @protected(type: GLOBAL)
  "Get information about the domain"
  domainDetails(domain: String!): Domain
    @protected(type: DOMAIN, args: ["domain"])
}

type DomainAdminMutation @protected{
  "Add new domain. Only for global admin"
  addDomain(domain: String!, hostType: String!): Domain
    @protected(type: GLOBAL)
  "Remove domain. Only for global admin"
  removeDomain(domain: String!, hostType: String!): RemoveDomainPayload
    @protected(type: GLOBAL)
  "Remove domain asynchronously. Only for global admin"
  requestRemoveDomain(domain: String!, hostType: String!): RemoveDomainPayload
    @protected(type: GLOBAL)
  "Enable domain. Only for global admin"
  enableDomain(domain: String!): Domain
    @protected(type: GLOBAL)
  "Disable domain. Only for global admin"
  disableDomain(domain: String!): Domain
    @protected(type: GLOBAL)
  "Create or update domain admin password"
  setDomainPassword(domain: String!, password: String!): String
    @protected(type: DOMAIN, args: ["domain"])
  "Delete domain admin password. Only for global admin"
  deleteDomainPassword(domain: String!): String
    @protected(type: GLOBAL)
}

"A result of domain removal"
type RemoveDomainPayload{
  "Success message"
  msg: String
  "Removed domain data"
  domain: Domain
}
